apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.zhouppei.digimuscore"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
                arguments "-DOpenCV_DIR=" + opencvsdk + "/sdk/native"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'

        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.10.2'
        }
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation project(path: ':opencv')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Core
    def version_core = "1.2.0-alpha03"
    implementation "androidx.core:core:$version_core"
    implementation "androidx.core:core-ktx:$version_core"

    // Material design
    def version_material = "1.2.1"
    implementation "com.google.android.material:material:$version_material"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Coroutines
    def version_coroutines = '1.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"

    // Constraint Layout
    def version_constraint_layout = '2.0.2'
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Recycler View
    def version_recyclerview = '1.1.0-beta03'
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    // AppCompat
    def version_appcompat = '1.1.0-rc01'
    implementation "androidx.appcompat:appcompat:$version_appcompat"

    // Legacy Support
    def version_legacy_support = '1.0.0'
    implementation "androidx.legacy:legacy-support-v4:$version_legacy_support"

    // Room
    def version_room = '2.4.0-alpha02'
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"
    implementation "androidx.room:room-ktx:$version_room"

    // Lifecycle
    def version_lifecycle = '2.2.0-alpha03'
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"

    // Data binding
//    kapt "com.android.databinding:compiler:$gradle_version"

    // Fragment extension
    def version_fragment_extension = '1.2.5'
    implementation "androidx.fragment:fragment-ktx:$version_fragment_extension"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_dagger_version"

    def version_assisted_inject = '0.6.0'
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$version_assisted_inject"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$version_assisted_inject"

    def activity_version = "1.1.0"
    implementation "androidx.activity:activity-ktx:$activity_version"

    def version_hilt_viewmodel = '1.0.0-alpha02'
    kapt "androidx.hilt:hilt-compiler:$version_hilt_viewmodel"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$version_hilt_viewmodel"

    // SeedDatabaseWorker
    def version_work = '2.6.0-alpha02'
    implementation "androidx.work:work-runtime-ktx:$version_work"

    // Gson
    def version_gson = '2.8.2'
    implementation "com.google.code.gson:gson:$version_gson"

    def camerax_version = "1.0.0-rc01"
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha23"

    // google mlkit
    implementation 'com.google.mlkit:face-detection:16.0.6'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}